[{"/Users/adnanjouni/Desktop/untitled folder/github/src/index.js":"1","/Users/adnanjouni/Desktop/untitled folder/github/src/App.js":"2"},{"size":221,"mtime":1645833897039,"results":"3","hashOfConfig":"4"},{"size":1034,"mtime":1645839808219,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"9"},"1hycspe",{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},"/Users/adnanjouni/Desktop/untitled folder/github/src/index.js",[],[],["14","15"],"/Users/adnanjouni/Desktop/untitled folder/github/src/App.js",["16"],[],"import React from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      users:[],\n      data:[],\n      login:[],\n      repos_url:\"\",\n      avatar_url:\"\",\n      url:\"\",\n      html_url:\"\"\n      \n    }\n  }\n\ncomponentDidMount = () =>{\n    axios.get(\"https://api.github.com/users\")\n    .then(res =>{\n      // console.log(res)\n      this.setState({\n        users : res.data,\n        login : res.data\n      })\n    }).catch(err =>{\n      console.log(err)\n    })\n  }\n\n  render(){\n    console.log(this.state.users)\n  return (\n    <div className=\"App\">\n      <h1>List of Github Users</h1>\n      <ul>\n      {this.state.users.map((value, index)=>{\n        return(\n          <div key={value.id}>\n            <li>{value.users}</li>\n            <li>{value.repos_url}</li>\n            <img src={value.repos_url}></img>\n            <li>{value.avatar_url}</li>\n          </div>\n        )\n      })}\n      </ul>\n    </div>\n  );\n}\n}\n\nexport default App;\n",{"ruleId":"17","replacedBy":"18"},{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","severity":1,"message":"22","line":44,"column":13,"nodeType":"23","endLine":44,"endColumn":40},"no-native-reassign",["24"],"no-negated-in-lhs",["25"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]